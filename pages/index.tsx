import Head from 'next/head'
import { MOBILE_WIDTH } from '../components/TrackCard'
import { Dashboard } from '../types'
import { ActionIcon, Box, Drawer, Flex, Grid, ScrollArea, Stack } from '@mantine/core'
import { ServerTracksCarousel } from '../components/ServerTracksCarousel'
import { Summary } from '../components/Summary'
import { SideBarPlayerStats } from '../components/SideBarPlayerStats'
import { Leaderboards } from '../components/Leaderboards'
import { useEffect, useState } from 'react'
import { useViewportSize } from '@mantine/hooks'
import { IconLayoutSidebarLeftExpand } from '@tabler/icons'

export default function Home({ tracks, summary, worldRecords, topMMR, topSR }: Dashboard) {
   const { width } = useViewportSize()
   const [open, setOpen] = useState(false)

   return (
      <>
         <Head>
            <title>Pepiti Dashboard</title>
            <meta name='description' content='Generated by create next app' />
            <meta name='viewport' content='width=device-width, initial-scale=1' />
            <link rel='icon' href='/favicon.ico' />
         </Head>
         <main>
            <ActionIcon
               variant='light'
               color='green'
               size='xl'
               pos='absolute'
               m='0.5em 0 0 0.5em'
               onClick={() => setOpen(true)}
            >
               <IconLayoutSidebarLeftExpand size={30} />
            </ActionIcon>

            <Drawer
               opened={open}
               onClose={() => setOpen(false)}
               size={width < MOBILE_WIDTH ? '60vw' : '20%'}
               styles={(theme) => ({
                  drawer: {
                     backgroundColor: theme.colors.dark[6],
                     borderTopRightRadius: 30,
                     borderBottomRightRadius: 30,
                  },
                  closeButton: {
                     margin: '1em 1em 0 0',
                  },
               })}
            >
               <SideBarPlayerStats />
            </Drawer>

            <Stack mih='100vh' justify='space-around'>
               <Summary summary={summary} />

               <Leaderboards worldRecords={worldRecords} topMMR={topMMR} topSR={topSR} />

               <ServerTracksCarousel tracks={tracks} />
            </Stack>
         </main>
      </>
   )
}

export async function getStaticProps() {
   const tracksRes = await fetch('https://pepiti.com/stats/api/v1/records')
   const { tracks } = await tracksRes.json()

   const summaryRes = await fetch('https://pepiti.com/stats/api/v0/summary')
   const summary = await summaryRes.json()

   const worldRecordsRes = await fetch('https://pepiti.com/stats/api/v0/top_riders')
   const worldRecords = await worldRecordsRes.json()

   const topMMRRes = await fetch('https://pepiti.com/stats/api/v0/top_mmr')
   const topMMR = await topMMRRes.json()

   const topSRRes = await fetch('https://pepiti.com/stats/api/v0/top_sr')
   const topSR = await topSRRes.json()

   return {
      props: {
         tracks,
         summary,
         worldRecords,
         topMMR,
         topSR,
      },
   }
}
